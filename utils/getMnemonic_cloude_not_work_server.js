const anthropicApiKey = process.env.ANTHROPIC_API_KEY

async function getMnemonic(word) {
  if (!anthropicApiKey) {
    console.error('‚ùå ANTHROPIC_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.')
    return 'Mnemonic not available.'
  }

  console.log(`üîç –ó–∞–ø—Ä–æ—Å –º–Ω–µ–º–æ–Ω–∏–∫–∏ –¥–ª—è —Å–ª–æ–≤–∞: "${word}" —á–µ—Ä–µ–∑ Claude`)

  const systemPrompt = `
–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–π –º–Ω–µ–º–æ—Ç–µ—Ö–Ω–∏–∫–∏. –¢–≤–æ—è —Ü–µ–ª—å ‚Äî —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–µ–≥–∫–æ –∏ –Ω–∞–¥–æ–ª–≥–æ –∑–∞–ø–æ–º–Ω–∏–ª –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ. –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª–æ–≤–æ, –¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–µ–µ:

1. –£–∫–∞–∂–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ, –µ–≥–æ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫—É—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é (–≤ —Å–∫–æ–±–∫–∞—Ö) –∏ –¥–æ–±–∞–≤—å –ø—Ä–∏–º–µ—Ä —á—Ç–µ–Ω–∏—è —Ä—É—Å—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ (–≤ —Å–∫–æ–±–∫–∞—Ö, –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ).
2. –î–∞–π –∫—Ä–∞—Ç–∫–æ–µ, –ø—Ä–æ—Å—Ç–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.
3. –ü—Ä–∏–≤–µ–¥–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.
4. –ü—Ä–∏–¥—É–º–∞–π —è—Ä–∫—É—é, –Ω–µ–æ–±—ã—á–Ω—É—é, –∑–∞–ø–æ–º–∏–Ω–∞—é—â—É—é—Å—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é (–º–Ω–µ–º–æ–Ω–∏–∫—É). –û–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–±—Å—É—Ä–¥–Ω–æ–π, —Å–º–µ—à–Ω–æ–π, –≤–∏–∑—É–∞–ª—å–Ω–æ–π, —Ä–∏—Ñ–º–æ–≤–∞–Ω–Ω–æ–π –∏–ª–∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π. –û—Å–Ω–æ–≤—ã–≤–∞–π –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é –Ω–∞ –∑–≤—É—á–∞–Ω–∏–∏ –∏/–∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ —Å–ª–æ–≤–∞.
   - –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∏—Ç–º–∏—á–Ω—É—é —Ñ—Ä–∞–∑—É –∏–ª–∏ —Ä–∏—Ñ–º—É, –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç.
   - –ú–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –≤ –≤–∏–¥–µ —Å—Ü–µ–Ω—ã, –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–ª–∏ –æ–±—Ä–∞–∑–∞, –∫–∞–∫ –≤ –º–µ—Ç–æ–¥–µ –ê–π–≤–∞–∑–æ–≤—Å–∫–æ–≥–æ –∏–ª–∏ –¶–∏—Ü–µ—Ä–æ–Ω–∞.
5. –û–±—ä—è—Å–Ω–∏ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é –ø–æ-—Ä—É—Å—Å–∫–∏, –∫–∞–∫ –¥—Ä—É–≥—É: –ø—Ä–æ—Å—Ç–æ, —Å —é–º–æ—Ä–æ–º –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏. –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –æ–±—Ä–∞–∑ ¬´–≤—Å–ø—ã—Ö–Ω—É–ª¬ª –≤ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–∏.
6. –£–∫–∞–∂–∏ 2‚Äì3 –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–≤–µ–¥–∏:
   - –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º (–∫—É—Ä—Å–∏–≤–æ–º),
   - –ü–µ—Ä–µ–≤–æ–¥ –ø—Ä–∏–º–µ—Ä–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–≤ —Å–∫–æ–±–∫–∞—Ö).

–§–æ—Ä–º–∞—Ç–∏—Ä—É–π –æ—Ç–≤–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ: –¥–µ–ª–∞–π –∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏ –∏ –∞–±–∑–∞—Ü—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è.

–ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –ª—ë–≥–∫–∏–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º. –ù–∏–∫–∞–∫–æ–π —Å—É—Ö–æ–π –∞–∫–∞–¥–µ–º–∏—á–Ω–æ—Å—Ç–∏. –ü–æ–º–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ –ø—Ä–æ—Å—Ç–æ —É–∑–Ω–∞—Ç—å, –∞ –∑–∞–ø–æ–º–Ω–∏—Ç—å —Å–ª–æ–≤–æ ‚Äî –Ω–∞–≤—Å–µ–≥–¥–∞.
`

  try {
    const response = await fetch('https://api.anthropic.com/v1/messages', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': anthropicApiKey,
        'anthropic-version': '2023-06-01',
      },
      body: JSON.stringify({
        model: 'claude-3-opus-20240229',
        max_tokens: 1000,
        temperature: 0.7,
        system: systemPrompt,
        messages: [
          {
            role: 'user',
            content: word,
          },
        ],
      }),
    })

    if (!response.ok) {
      const errorText = await response.text()
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç Claude API (${response.status}): ${errorText}`)
      return 'Mnemonic not available.'
    }

    const data = await response.json()
    const result = data?.content?.[0]?.text

    if (!result) {
      console.warn('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç Claude.')
      return 'Mnemonic not available.'
    }

    console.log('‚úÖ –ú–Ω–µ–º–æ–Ω–∏–∫–∞ –æ—Ç Claude –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.')
    console.log('result', result)
    return result
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Claude API:', err)
    return 'Mnemonic not available.'
  }
}

module.exports = getMnemonic
